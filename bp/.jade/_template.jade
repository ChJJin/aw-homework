//- mixin template(docName, templateType, references)
//-   - var templateName = (templateType == 'detail') ? docName : (docName.pluralize() + '-list')
//-   - var viewId = Date.now() + Math.random() // template每次被插入，得到一个新view
//-   - bp.makeBpc(docName) // 产生初始化BPC的代码
//-   template(name=templateName)
//-     //- 这里向BPC注册当前的view
//-     | {{bp-register-view '#{docName}' '#{templateName}' '#{viewId}'}}
//-     block
//-     if references 
//-       - if(typeof references == 'string') {references = [references];}
//-       each ref in references
//-         .reference(bp-view-name=ref)
//-           | {{> #{ref}}}


mixin template(docName, templateName, templateType)
  - console.log("************* 1 ***********")
  - currentViewName = templateName // 用于在生成_link-button时，标明所在view
  - var topView = bp.getView(docName, currentViewName, templateName, templateType); 
  - references = [];
  - console.log("************* 2 ***********: ")
  //- 切换bpc的helper，保障同一个template，多个view的情况下渲染正确
  //- | {{bp-load-bpc '#{currentViewName}'}} !!!! 注意 ！！！ 顶层template在Router的before里面load-bpc，写在这里无用，在<template>标签外了，Meteor是不会执行的。
  template(name=templateName)
    block
    each ref in references
      +_reference(topView, ref)
    - console.log("************* 3 ***********")




mixin _reference(topView, templateName)
  - console.log("call reference, ref: ", ref)
  - var currentViewName = 'ref-' + templateName
  - topView.addComposedView(currentViewName, templateName)
  | {{bp-load-bpc '#{currentViewName}'}}
  .reference(bp-view-name=currentViewName)
    | {{> #{templateName}}}

mixin main-nav(templateNames)
  -bp.setMainNav(templateNames)
  -bp.saveView()
