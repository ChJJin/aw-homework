include commons

//- --------------- 各种文本域，都是 input type = 'text' --------------------


mixin _text(label, attr, htmlTag)
  - var attr = attr ? attr : label
  +guarded-input-wrapper(label, attr)(attributes)
    - addCondition(attributes, P.trigger('change'))
    - var validationStr = attributes.optional ?  attributes.condition : (attributes.condition + " required='required'")
    - var placeholderStr = attributes.placeholder ? " placeholder='" + attributes.placeholder + "' " : ''
    if htmlTag == 'input'
      - var valueStr = attr? ("name='" + attr + "' value='{{bs \"" + attr + "\"}}' ") : '' 
      .ui.fluid.labeled.input
        != "<input type='text' " + valueStr + validationStr + placeholderStr + " tabindex='" + index +"'/>"
        if !attributes.optional
          .ui.corner.label
            i.asterisk.icon
    else // 包括了普通textarea和html editor
      - var valueStr = attr? ("{{bs '" + attr + "'}}") : '' 
      - var nameStr =  attr? ("name='" + attr + "'") : '' 
      if attributes.isHtml
        != "<textarea id='" + attributes.id + "' type='text' " + nameStr + placeholderStr + " tabindex='" + index + "'>" + valueStr + "</textarea>"
      else
        != "<textarea type='text' " + nameStr + validationStr + placeholderStr + " tabindex='" + index + "'>" + valueStr + "</textarea>"
    //- input(type='text', name=value, value!="{{bs '#{value}'}}") 

mixin text(label, attr)
 +_text(label, attr, 'input')(attributes)

//- text area
mixin block-text(label, attr)
 +_text(label, attr, 'textarea')(attributes)


mixin no-blank-text(label, attr)
  - addCondition(attributes, P.notblank())
  +text(label, attr)(attributes)

mixin min-text(label, attr)
  - addCondition(attributes, P.minlength(attributes.min))
  +text(label, attr)(attributes)

mixin max-text(label, attr)
  - addCondition(attributes, P.maxlength(attributes.max))
  +text(label, attr)(attributes)


//- 这个是纯文字版的，便于手工输入
mixin datetime(label, attr)
  - addCondition(attributes, P.dateIso())
  +text(label, attr)(attributes)

//- ------ 待实现 ------
  range text
  search
  voice
  regexp text