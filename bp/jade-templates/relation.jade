include table
include form
include fields/fields

mixin relation(from, relationDescription, to)
  - namespace = namespace || (attributes.namespace || 'default')
  - type = attributes.type || 'aggregation'
  - bp.addRelation(namespace, from, relationDescription, to, attributes.type)

mixin remove-create-link()
  +remove-link('go-create')

mixin add-go-create-or-go-update(relation)
  - var currentEnd = relation.getCurrentEnd(docName)
  - var oppositeEnd = relation.getOppositeEnd(docName)
  if currentEnd.canCreateOtherSide
    +add-go-create-relation-data-link(relation)
  if oppositeEnd.multiplicity == '1'
    +add-go-update-relation-data-link(relation)
  else
    +add-go-update-relation-data-links(relation)

mixin add-go-create-relation-data-link(relation)
  - var goCreateLink = relation.getLinkByAction('go-create', docName)
  +add-item-link(goCreateLink)

mixin add-go-update-relation-data-link(relation)
  - var goUpdateLink = relation.getLinkByAction('go-update', docName) // 改为直接用relation.getLinkByAction
  +add-item-link(goUpdateLink)

mixin add-go-update-relation-data-links(relation)
  - var goUpdateLink = relation.getLinkByAction('go-update', docName)
  +add-item-links(goUpdateLink)

mixin add-relations-fields(relations)
  +fieldset('添加/更新关系')
    +row()
      each relation in relations
        +_calculate-ends-and-links(relation)
        if relation.type == 'aggregation' 
          +add-relation-select(relation)
        else
          if currentEnd.type == 'end'
            +if-face('create')
              +auto-insert(oppositeEnd.docName + 'Id', A.docId(oppositeEnd.docName))


  +fieldset('已有关系')
    +row()
      each relation in relations
        +_calculate-ends-and-links(relation)
        //- create时还没有已有关系
        +unless-face('create')
          if relation.type == 'aggregation'
            +add-go-create-and-go-update(relation)
          else
            if currentEnd.type == 'end'
              +show-related-data-with-text-link(relation)
            else
              +add-go-create-and-go-update(relation)


mixin _calculate-ends-and-links(relation)
  - currentEnd = relation.getCurrentEnd(docName)
  - oppositeEnd = relation.getOppositeEnd(docName)
  - goCreateLink = relation.getLinkByAction('go-create', currentEnd)
  - goUpdateLink = relation.getLinkByAction('go-update', currentEnd)

mixin add-go-create-and-go-update(relation)
  if oppositeEnd.multiplicity == 1
    +add-go-create-or-go-update-text-link(relation)
  else
    +add-go-create-and-go-update-text-links(relation)

mixin show-related-data-with-text-link(relation)
  - attributes = Object.merge({isLink: true}, goUpdateLink)
  +ref-text(oppositeEnd.showName, oppositeEnd.showAttr)(attributes)

mixin add-go-create-or-go-update-text-link(relation)
  +add-additional-links([goCreateLink])
    | #{oppositeEnd.showName}
  +add-additional-links([goUpdateLink])
    | {{bs '#{oppositeEnd.showAttr}'}}

mixin add-go-create-and-go-update-text-links(relation)
  +add-additional-links([goCreateLink])
    | #{oppositeEnd.showName}
  +add-addtional-multiple-links([goUpdateLink])(showAttr=oppositeEnd.showAttr)

mixin add-relation-select(relation)
  - var isMultiple = oppositeEnd.multiplicity != '1'
  - var idAttrName = oppositeEnd.docName + (isMultiple ?  'Ids' : 'Id') 
  +multi-ahead(oppositeEnd.showName, idAttrName)(sourceDocName=oppositeEnd.docName, sourceAttr='_id', optionAttr=oppositeEnd.showAttr, multiple=isMultiple)