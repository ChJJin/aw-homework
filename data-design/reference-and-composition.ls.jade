
# 引用域、引用fileset：在BPC的Detail、或List的视图上有引用其它BPC的field或fieldset
new BP.Component 'assignment' # 简单CURD

new BP.Component 'homework', do # 视图上有引用的BPC
  main: homework # Homework, homeworks, Homworks都可以
  references: [assignment] # assignment也可以

new BP.Component 'homework', do # 除了默认的detail和list之外，还有其它template
  main: homework # Homework, homeworks, Homworks都可以
  references: [assignment] # assignment也可以
  addtional-templates: 
    name: 'do-homework'
    type: 'detail' # detail | list | other # TODO: make Helpers、router、template extendable
    helper: 'xxx' # BPC会缺省查找#{name}Helper
    router: 'xxx' # BPC会缺省查找#{name}Router

# 组合template，没有template，而是直接组合现有template
assignment = new BP.Component 'assignment'
homework = new BP.Component 'homework'
# 组合前必须先初始化被组合templae的BPC
# 默认的route为主template的path之后，插入被组合的template path
new BP.Component 'homework-list', 'assignment',  # 此时homework-list先插入，assignment后插入
new BP.Component do
  assignment: 
    order: 0
    exclude: ['']
  homework-list:
    order: 1


'''

//- 注意此处不再直接用Meteor的template了，改为Mixin，插入逻辑
template(name='do-homework')
+text('题目', 'collection: Assignment, attribute: deadline.day, query: {aid: _id}')
+text('题目', 'c: Assignment, a: deadline.day, q: {aid: _id}')

//- collection, query为必须给出的项，attribute省略时，为整个doc
+fieldset('作业安排与要求', 'collection: Assignment, attribute: requirement, query: {aid: _id}')
  //- Assigment#requirement.format
  +text('格式', 'format')

