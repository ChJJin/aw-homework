//- 此处定义所有的BP控件，在BP平台上的应用，需要用这些Mixin来定义界面

//- 这里需要接入BP的权限检查和validation

//- 用于创建和修改的表单
mixin form(collectionName, item)
  //- set collection name 便于在渲染item的时候确定permission，这里如果能够在jade的block里passing就最好了，现在是无奈，只好从Meteor help走
  | {{bp-set-collection "#{collectionName}"}} 
  | {{#with #{item}}}
  - var collection = collectionName
  form(parsley-validate)
    block(colletion=collectionName)
    | {{#if bp-collection-permit 'edit'}}
    input(type='submit', value='提交') 
    | {{/if}}
  | {{/with}} 


mixin __input(label, value)
  .controls
    label #{label}:
      | {{#if bp-attribute-permit _id '#{value}' 'edit'}}
      block     
      | {{else}}
      span {{#{value}}}
      | {{/if}}

mixin text(label, value)
  +__input(label, value)
    input(type='text', name=value, value='{{#{value}}}') 

mixin email(value, required)
  +__input('电子邮件', value)
    //- -var req = required? 'required': ''
    input(type='email', name='email', value='{{#{value}}}',  required=required) 



//- 用于展示的列表
mixin table(items, columnNames, attributesNames)
  +create-button()
  table
    thead
      tr
        each col, index in columnNames
          th(cols=index) #{col}
    tbody
      +rows(items, columnNames, attributesNames)

mixin create-button()
  | {{#if bp-collection-permit 'create'}}
  form
    input(type='submit', value='增加') 
  | {{/if}}


mixin rows(items, columnNames, attributesNames)
  | {{#each #{items}}}
  tr
  each attr, index in attributesNames
    td(cols=index) {{#{attr}}}
  | {{/each}}  



//- mixin all-text(items)
//-   each item in items
//-     +text(item.label, item.value)
